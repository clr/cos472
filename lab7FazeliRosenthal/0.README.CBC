------------------------------------------------------------------------
File: README-CBC
Notes from Clare on using Genesis
------------------------------------------------------------------------
Compiling Genesis
Type "make install".
------------------------------------------------------------------------
Using Genesis

To run Genesis, the command is 'go', which is a script that needs two
arguments. For example,
  go f1 ex1

The first argument is the name for the the file with the fitness function in
it. For example, in this directory is a file called f1.c and another file
called ga.f1. 
  f1.c is the source file for the fitness function
  ga.f1 is the version of the GA compiled to use that fitness function.

The second argument is the name of the extension to use for a template file
and for reports generated by the system. For example, there are several files
in this directory that end with 'ex1' -- two of these are input files and
four are output files.

Input files are: 
  template.ex1 defines the number of different "genes", the number of
               bits to use for each, etc.
  in.ex1 defines the parameters for the GA run.

Output files are: 
  rep.ex1, the summary report file generated by the GA 
  out.ex1, illustrating the progress across generations as the system runs 
  min.ex1, the best of the final population
  ckpt.ex1, a "checkpoint" file -- this allows the system to pick up later
            where it left off, if desired. 
------------------------------------------------------------------------
The fitness function source file

The file f1.c contains a single function, eval, which returns a double that
indicates the fitness of the string.

The parameters to eval are:
  str     the bit string  (an array of characters)
  length  the length of the string in bits
  vect    the floating-point representation of the string (an array of doubles)
  genes   the number of "genes" in the string

Basically, this gives you the same information two different ways so that you
have the choice of iterating through the bitstring or through the
floating-point representation as you're determining the fitness of the string.

(Note that Genesis was not written for efficiency, but rather for
accessibility. Having all that information passed in is a bit of overkill, but
lessens the chance that you have to look at other functions in the GA to know
how to write your own fitness function.)
------------------------------------------------------------------------
